{
	"info": {
		"_postman_id": "sa1234-5678-9abc-def0-123456789012",
		"name": "DevRev - Service Accounts API",
		"description": "Collection for DevRev Service Accounts API operations - automated system accounts and service authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Create Service Account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 201) {",
							"    const response = pm.response.json();",
							"    if (response.service_account) {",
							"        pm.environment.set('service_account_id', response.service_account.id);",
							"        pm.environment.set('service_account_display_id', response.service_account.display_id);",
							"        console.log('Service Account created with ID:', response.service_account.id);",
							"        console.log('Service Account name:', response.service_account.display_name);",
							"    }",
							"} else {",
							"    console.log('Service Account creation failed:', pm.response.text());",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{aat}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"display_name\": \"API Service Account {{$timestamp}}\",\n  \"description\": \"Service account created via API for automated operations\",\n  \"permissions\": [\"read\", \"write\"],\n  \"scopes\": [\"accounts\", \"works\", \"users\"]\n}"
				},
				"url": {
					"raw": "https://{{base_url}}/service-accounts.create",
					"protocol": "https",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"service-accounts.create"
					]
				},
				"description": "Creates a new service account for automated API operations"
			}
		},
		{
			"name": "Get Service Account by ID",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{aat}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{base_url}}/service-accounts.get?id={{service_account_id}}",
					"protocol": "https",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"service-accounts.get"
					],
					"query": [
						{
							"key": "id",
							"value": "{{service_account_id}}",
							"description": "Service account ID"
						}
					]
				},
				"description": "Retrieves service account details using the service account ID"
			}
		},
		{
			"name": "List Service Accounts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    const response = pm.response.json();",
							"    if (response.service_accounts && response.service_accounts.length > 0) {",
							"        console.log('Found', response.service_accounts.length, 'service accounts');",
							"        pm.environment.set('first_service_account_id', response.service_accounts[0].id);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{aat}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "https://{{base_url}}/service-accounts.list?limit=20",
					"protocol": "https",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"service-accounts.list"
					],
					"query": [
						{
							"key": "limit",
							"value": "20",
							"description": "Maximum number of service accounts to return"
						},
						{
							"key": "status",
							"value": "",
							"description": "Filter by status (active, inactive)",
							"disabled": true
						}
					]
				},
				"description": "Lists all service accounts with optional filtering"
			}
		},
		{
			"name": "Update Service Account",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{aat}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"{{service_account_id}}\",\n  \"display_name\": \"[UPDATED] API Service Account\",\n  \"description\": \"Updated service account description with enhanced permissions\",\n  \"permissions\": [\"read\", \"write\", \"admin\"]\n}"
				},
				"url": {
					"raw": "https://{{base_url}}/service-accounts.update",
					"protocol": "https",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"service-accounts.update"
					]
				},
				"description": "Updates an existing service account"
			}
		},
		{
			"name": "Generate Service Account Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 201) {",
							"    const response = pm.response.json();",
							"    if (response.token) {",
							"        pm.environment.set('service_account_token', response.token);",
							"        console.log('Service Account Token generated');",
							"        console.log('Token expires at:', response.expires_at);",
							"    }",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{aat}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"service_account_id\": \"{{service_account_id}}\",\n  \"expires_at\": \"2024-12-31T23:59:59.000Z\",\n  \"scopes\": [\"read\", \"write\"]\n}"
				},
				"url": {
					"raw": "https://{{base_url}}/service-accounts.generate-token",
					"protocol": "https",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"service-accounts.generate-token"
					]
				},
				"description": "Generates an authentication token for the service account"
			}
		},
		{
			"name": "Delete Service Account",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{aat}}",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": \"{{service_account_id}}\"\n}"
				},
				"url": {
					"raw": "https://{{base_url}}/service-accounts.delete",
					"protocol": "https",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"service-accounts.delete"
					]
				},
				"description": "Deletes a service account"
			}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log('DevRev Service Accounts API Collection - Request starting');"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log('Response status:', pm.response.code, pm.response.status);"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "api.devrev.ai",
			"type": "string"
		}
	]
}
